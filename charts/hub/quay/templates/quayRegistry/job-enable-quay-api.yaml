apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/sync-wave: "15"
  name: enable-quay-api
  namespace: {{ .Values.quay.namespace }}
spec:
  template:
    spec:
      containers: 
      - image: {{ .Values.job.image }}
        env:
        - name: CSRFPATTERN
          value: ".*window.__token\ =\ '(.*)';.*"
        command:
        - /bin/bash
        - -c
        - |
          oc get secret quay-temp-token
          if [ $? -ne 0 ]; then
            echo "Quay default user not created. Creating ..."  
            # Invoke API and add quay user to the API - initiates API
            JSONTOKEN=$(curl -X POST -k  https://quay-registry-quay-quay-enterprise.{{ .Values.global.hubClusterDomain }}/api/v1/user/initialize --header 'Content-Type: application/json' --data '{ "username": "{{ .Values.global.quay.account }}", "password":"{{ .Values.global.quay.password }}", "email": "{{ .Values.global.quay.email }}", "access_token": true}') && \
            oc create secret generic quay-temp-token --from-literal=token=$JSONTOKEN
          fi
          oc get secret -n openshift-operators quay-integration
          if [ $? -ne 0 ]; then
            echo "quay-integration secret not created. Creating ..."  
            # Now extract the token and store in the Quay Integration secret in openshift-operators namespace
            TOKEN=$(oc extract secret/quay-temp-token --keys=token --to=- | grep access_token | cut -d : -f2 | awk -F\" '{print $2}') && \
            oc create secret -n openshift-operators generic quay-integration --from-literal=token=$TOKEN
            curl -X POST -k --header 'Content-Type: application/json' -H "Authorization: Bearer $TOKEN" https://quay-registry-quay-quay-enterprise.{{ .Values.global.hubClusterDomain }}/api/v1/organization/ --data '{"name": "develorg", "email": "developer@myorg.com"}'
            echo "Org creation status: $?"
            if [ $? -eq 0 ]; then
              echo "Creating a repo ..."
              curl -X POST -k --header 'Content-Type: application/json' -H "Authorization: Bearer $TOKEN" https://quay-registry-quay-quay-enterprise.{{ .Values.global.hubClusterDomain }}/api/v1/repository --data '{"namespace":"develorg","repository":"develorg","visibility":"public","description":"Development Repo","repo_kind":"image"}'
              if [ $? eq 0 ]; then
                echo "Repo created"
              if
              echo "Creating a user ..."
              USERTOKEN=$(curl -X POST -k  https://quay-registry-quay-quay-enterprise.{{ .Values.global.hubClusterDomain }}/api/v1/superuser/users/ -H "Authorization: Bearer $TOKEN" --header 'Content-Type: application/json' --data '{ "username": "developer1", "email": "developer@myorg.com", "access_token": true}')
              if [ $? eq 0 ]; then
                echo "User created"
              if
              echo "Creting a secret with user passwords."
              oc create secret -n openshift-operators generic quay-user --from-literal=token=$USERTOKEN
              if [ $? eq 0 ]; then
                echo "User secret created"
              if
            else
              echo "Problem with creating an organization in Quay Enterprise!"  
            fi
          fi
          echo "Job finished" 
        name: quay-api-enablement
      dnsPolicy: ClusterFirst
      activeDeadlineSeconds: 900
      restartPolicy: Never
      serviceAccountName: quay-admin-sa
      terminationGracePeriodSeconds: 60